extend type Query {
  """
  ✨ Look up a single `Student` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  student(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Student_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Student_FirstRow
  ): Student @fdc_generated(from: "Student", purpose: QUERY_SINGLE)
  """
  ✨ Look up a single `Tutor` based on `id`, `key` or `first` and return selected fields (or `null` if not found).
  """
  tutor(
    """
    The unique ID of the object.
    """
    id: UUID

    """
    The key used to identify the object.
    """
    key: Tutor_Key

    """
    Fetch the first row based on the filters and ordering.
    """
    first: Tutor_FirstRow
  ): Tutor @fdc_generated(from: "Tutor", purpose: QUERY_SINGLE)
  """
  ✨ List `Student` objects in the table and return selected fields, optionally filtered by `where` conditions
  """
  students(
    """
    Filter condition to narrow down the query results.
    """
    where: Student_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Student_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100

    """
    Set to true to return distinct results.
    """
    distinct: Boolean = false

    """
    Filter condition to apply to the groups of aggregate queries.
    """
    having: Student_Having
  ): [Student!]! @fdc_generated(from: "Student", purpose: QUERY_MULTIPLE)
  """
  ✨ List `Tutor` objects in the table and return selected fields, optionally filtered by `where` conditions
  """
  tutors(
    """
    Filter condition to narrow down the query results.
    """
    where: Tutor_Filter

    """
    Order the query results by specific fields.
    """
    orderBy: [Tutor_Order!]

    """
    Number of rows to skip before starting to return the results.
    """
    offset: Int

    """
    Maximum number of rows to return (defaults to 100 rows).
    """
    limit: Int = 100

    """
    Set to true to return distinct results.
    """
    distinct: Boolean = false

    """
    Filter condition to apply to the groups of aggregate queries.
    """
    having: Tutor_Having
  ): [Tutor!]! @fdc_generated(from: "Tutor", purpose: QUERY_MULTIPLE)
}

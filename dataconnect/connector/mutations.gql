mutation UpdateTutor(
  $name: String!
  $type: String!
  $gender: String!
  $email: String!
  $phoneNo: String!
  $address: String!
) @auth(level: USER) {
  tutor_update(
    first: { where: { id: { eq_expr: "auth.uid" } } }
    data: {
      name: $name
      type: $type
      gender: $gender
      email: $email
      phoneNo: $phoneNo
      address: $address
    }
  )
}

mutation AddTutor(
  $name: String!
  $type: String!
  $gender: String!
  $email: String!
  $phoneNo: String!
  $address: String!
) @auth(level: PUBLIC) {
  tutor_insert(
    data: {
      name: $name
      type: $type
      gender: $gender
      email: $email
      phoneNo: $phoneNo
      address: $address
    }
  )
}



mutation AddStudent(
  $name: String!
  $type: String! # "online" or "onsite"
  $gender: String! # "male" or "female"
  $dob: Date!
  $school: String!
  $email: String!
  $phoneNo: String!
  $address: String!
  $status: String!
  $tuitionLoc: String!
) @auth(level: USER) {
  student_insert(
    data: {
      name: $name
      type: $type
      gender: $gender
      dob: $dob
      school: $school
      email: $email
      phoneNo: $phoneNo
      address: $address
      status: $status
      tuitionLoc: $tuitionLoc
      tutorId_expr: "auth.uid"
    }
  )
}

mutation AddRegistrationLink(
  $expiryDate: Timestamp!
) @auth(level: USER) {
  registrationLink_insert(
    data: {
      tutorId_expr: "auth.uid"
      expiryDate: $expiryDate
    }
  )
}
type Student @table(key: ["id"]) {
  id: UUID! @default(expr: "uuidV4()")
  name: String!
  type: String! # "online" or "onsite"
  gender: String! # "male" or "female"
  dob: Date!
  school: String!
  year: String!
  email: String!
  phoneNumber: String
  parentPhoneNumber: String
  address: String
  status: String!
  tutor: Tutor!
}

type Tutor @table(key: "id") {
  id: String! @default(expr: "auth.uid")
  name: String!
  type: String # "online" or "onsite"
  gender: String # "male" or "female"
  email: String
  phoneNumber: String
  address: String
  calendarId: String
}

type StudentFormURL @table(key: ["id"]) {
  id: UUID! @default(expr: "uuidV4()")
  tutor: Tutor!
  createdAt: Timestamp! @default(expr:"request.time")
}

# add logic
type TutorStudentSubject @table (key: ["id"]) {
  id: UUID! @default(expr: "uuidV4()")
  tutor: Tutor!
  student: Student!
  subject: String!
  startTime: Timestamp!
  endTime: Timestamp!
  interval: String! # Every Tuesday etc
  rate: Float!
  eventId: String
  recurrence: String #rrule
}


type LessonEvent @table(key:["id"]) {
  id: UUID! @default(expr: "uuidV4()")
  tutorStudentSubject: TutorStudentSubject!
  startTime: Timestamp!
  endTime: Timestamp!
  status: String! #"Scheduled", "Completed", "Cancelled", "Rescheduled"
  notes: String
}
